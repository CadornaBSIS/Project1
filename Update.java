/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.*;
import javax.swing.JOptionPane;
import java.lang.*;

/**
 *
 * @author DELL
 */
public class Update extends javax.swing.JFrame {
boolean search=true;
Connection con;
PreparedStatement pst;
ResultSet rs;

    /**
     * Creates new form Update
     */
    public Update() {
        initComponents();
        Connect();
        textName.setText("");
        textName.setEnabled(true);
        textLast.setText("");
        textLast.setEnabled(false);
        textAddress.setText("");
        textAddress.setEnabled(false);
        textMobileNo.setText("");
        textMobileNo.setEnabled(false);
        textEmail.setText("");
        textEmail.setEnabled(false);
        textPass.setText("");
        textPass.setEnabled(false);
        

        editButton.setEnabled(false);

        Update.this.setLocation(330,140);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        searchId = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        textName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        textLast = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        textAddress = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        textMobileNo = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        textEmail = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        textPass = new javax.swing.JTextField();
        SearchButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(800, 500));

        jPanel1.setBackground(new java.awt.Color(204, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(800, 500));

        jLabel1.setText("ID Number: ");

        jLabel2.setText("First Name:");

        jLabel3.setText("Last Name:");

        jLabel4.setText("Address:");

        jLabel5.setText("Mobile No:");

        jLabel6.setText("Email:");

        jLabel7.setText("Password:");

        SearchButton.setBackground(new java.awt.Color(255, 255, 204));
        SearchButton.setIcon(new javax.swing.ImageIcon("C:\\Users\\DELL\\Documents\\search (2).png")); // NOI18N
        SearchButton.setText("Search");
        SearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButtonActionPerformed(evt);
            }
        });

        editButton.setBackground(new java.awt.Color(0, 255, 204));
        editButton.setIcon(new javax.swing.ImageIcon("C:\\Users\\DELL\\Documents\\update.png")); // NOI18N
        editButton.setText("Update");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        deleteButton.setBackground(new java.awt.Color(255, 102, 102));
        deleteButton.setIcon(new javax.swing.ImageIcon("C:\\Users\\DELL\\Downloads\\delete.png")); // NOI18N
        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Arial Black", 0, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 0, 0));
        jLabel8.setText("UPDATE | DELETE | SEARCH");

        jLabel9.setIcon(new javax.swing.ImageIcon("C:\\Users\\DELL\\Downloads\\employee (4).png")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(searchId, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(textName, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textLast, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(79, 79, 79)
                        .addComponent(jLabel9))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(textEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(43, 43, 43)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textMobileNo, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(115, 115, 115)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(editButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textPass, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(105, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(searchId, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textLast, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(textAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textMobileNo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(textPass, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(editButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(SearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(96, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(296, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(209, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void Connect()
    {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/db1","root","CADORNA");
            
        } catch (ClassNotFoundException ex) {
          
        } catch (SQLException ex) {
          
        }
    }

    private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButtonActionPerformed
        // TODO add your handling code here:
        String userId = searchId.getText().trim();
    if (!userId.matches("\\d{6}")) {
        searchId.setForeground(Color.red);
        JOptionPane.showMessageDialog(null, "User ID must be 6 digits and must not contain characters",
                "System Message", JOptionPane.ERROR_MESSAGE);
        return; 
    }else {
        searchId.setForeground(Color.green); 
    } 
        
        try {      
            pst = con.prepareStatement("select Id,fname,lname,address, mobileno,email, password from reg_tbl where Id=? ");
            int id = Integer.parseInt(searchId.getText());
            pst.setInt(1, id);
            ResultSet rs1 = pst.executeQuery();
            if(rs1.next()==false)
                {
                JOptionPane.showMessageDialog(this, "Sorry Record Not Found");
                                textName.setText("");
                                textLast.setText("");
                                textAddress.setText("");
                                textMobileNo.setText("");
                                textEmail.setText("");
                                textPass.setText("");
                                searchId.requestFocus();
                    }
                        else
                        {

            textName.setText(rs1.getString("fname"));
                        textLast.setText(rs1.getString("lname"));
                         textAddress.setText(rs1.getString("address"));
                          textMobileNo.setText(rs1.getString("mobileno"));
                           textEmail.setText(rs1.getString("email"));
                            textPass.setText(rs1.getString("password"));
                              editButton.setEnabled(true);
        }
            
        } catch (SQLException ex) {
            //Logger.getLogger(SearchJdbc.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_SearchButtonActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        // TODO add your handling code here:
        textName.setEnabled(true);
        textLast.setEnabled(true);
        textAddress.setEnabled(true);
        textMobileNo.setEnabled(true);
        textEmail.setEnabled(true);
        textPass.setEnabled(true);
    
    if (textAddress.getText().isEmpty() || 
        searchId.getText().isEmpty() || 
        textName.getText().isEmpty() || 
        textMobileNo.getText().isEmpty() || 
        textLast.getText().isEmpty() || 
        textPass.getText().isEmpty() || 
        textAddress.getText().isEmpty()) {
        JOptionPane.showMessageDialog(null, "All fields must be completed", 
                "System Message", JOptionPane.ERROR_MESSAGE);
        return; 
    }
         String userId = searchId.getText().trim();
    if (!userId.matches("\\d{6}")) {
        searchId.setForeground(Color.red);
        JOptionPane.showMessageDialog(null, "User ID must be 6 digits and must not contain characters",
                "System Message", JOptionPane.ERROR_MESSAGE);
        return; 
    }else {
        searchId.setForeground(Color.green); 
    }
    String userName = textName.getText().trim();
    if (!userName.matches("[a-zA-Z]+")) {
        textName.setForeground(Color.red);
        JOptionPane.showMessageDialog(null, " First Name must not contain numbers or symbols",
                "System Message", JOptionPane.ERROR_MESSAGE);
        return;
    }else {
        textName.setForeground(Color.green);
    }
    String lastName = textLast.getText().trim();
    if (!lastName.matches("[a-zA-Z]+")) {
        textLast.setForeground(Color.red);
        JOptionPane.showMessageDialog(null, "Last Name must not contain numbers or symbols",
                "System Message", JOptionPane.ERROR_MESSAGE);
        return;
    } else {
        textLast.setForeground(Color.green);
    }
    String contactNumber = textMobileNo.getText().trim();
    if (!contactNumber.matches("\\d{11}")) {
        textMobileNo.setForeground(Color.red);
        JOptionPane.showMessageDialog(null, "Contact Number must be 11 digits and must not contain characters",
                "System Message", JOptionPane.ERROR_MESSAGE);
        return; 
    } else {
        textMobileNo.setForeground(Color.green);
    }
    String password = textPass.getText().trim();
    if (password.length() < 8 || password.length() > 10) {
        textPass.setForeground(Color.red);
        JOptionPane.showMessageDialog(null, "Password must be between 8 and 10 digits/characters",
                "System Message", JOptionPane.ERROR_MESSAGE);
        return;
    } else {
        textPass.setForeground(Color.green); 
    }
    String currentName, currentLast, currentAddress, currentMobileNo, currentEmail, currentPass;
    try {
        Connection cn;
        Statement st;
        String url;
        url = "jdbc:mysql://localhost:3306/db1";
        Class.forName("com.mysql.cj.jdbc.Driver");
        cn = (Connection) DriverManager.getConnection(url, "root","CADORNA");
        st = (Statement) cn.createStatement();

        ResultSet rs = st.executeQuery("SELECT fname, lname, address, mobileno, email, password FROM reg_tbl WHERE Id='" + searchId.getText() + "'");
        if (rs.next()) {
            currentName = rs.getString("fname");
            currentLast = rs.getString("lname");
            currentAddress = rs.getString("address");
            currentMobileNo = rs.getString("mobileno");
            currentEmail = rs.getString("email");
            currentPass = rs.getString("password");
        } else {
            // Handle the case where the record is not found
            JOptionPane.showMessageDialog(null, "Error: Record not found", "System Message", JOptionPane.ERROR_MESSAGE);
            return;
        }
    } catch (ClassNotFoundException | SQLException ex) {
        ex.printStackTrace();
        return;
    }

    if (textName.getText().equals(currentName) &&
        textLast.getText().equals(currentLast) &&
        textAddress.getText().equals(currentAddress) &&
        textMobileNo.getText().equals(currentMobileNo) &&
        textEmail.getText().equals(currentEmail) &&
        textPass.getText().equals(currentPass)) {
        // No changes made, inform the user and return
        JOptionPane.showMessageDialog(null, "No changes made", "System Message", JOptionPane.INFORMATION_MESSAGE);
        return;
    }

    int answer = JOptionPane.showConfirmDialog(null, "Are you sure you want to update this record?", "System Message", JOptionPane.YES_NO_OPTION);

    if (answer == JOptionPane.YES_OPTION) {
        try {
            deleteButton.setEnabled(true);
            Connection cn;
            Statement st;
            String url;
            url = "jdbc:mysql://localhost:3306/db1";
            Class.forName("com.mysql.cj.jdbc.Driver");
            cn = (Connection) DriverManager.getConnection(url, "root","CADORNA");
            st = (Statement) cn.createStatement();

            // Update the record based on the user input
            st.executeUpdate("UPDATE reg_tbl SET  "
                    + "fname='" + textName.getText() + "', "
                    + "lname='" + textLast.getText() + "', "
                    + "address='" + textAddress.getText() + "', "
                    + "mobileno='" + textMobileNo.getText() + "', "
                    + "email='" + textEmail.getText() + "', "
                    + "password='" + textPass.getText() + "' "
                    + "WHERE Id='" + searchId.getText() + "'");

            JOptionPane.showMessageDialog(null, "Record Updated", "System Message", JOptionPane.INFORMATION_MESSAGE);

            textName.setText("");
            textLast.setText("");
            textAddress.setText("");
            textMobileNo.setText("");
            textEmail.setText("");
            textPass.setText("");

            textName.setEnabled(true);
            textLast.setEnabled(false);
            textAddress.setEnabled(false);
            textMobileNo.setEnabled(false);
            textEmail.setEnabled(false);
            textPass.setEnabled(false);

        } catch (ClassNotFoundException | SQLException ex) {
            ex.printStackTrace();
        }
    } else {
        // User canceled the update, disable editing and reset the fields
        textName.setEnabled(false);
        textLast.setEnabled(false);
        textAddress.setEnabled(false);
        textMobileNo.setEnabled(false);
        textEmail.setEnabled(false);
        textPass.setEnabled(false);
    }
        
    }//GEN-LAST:event_editButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        int answer;
        answer = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this record?","System Message",JOptionPane.YES_NO_OPTION);
        if(answer==JOptionPane.YES_OPTION){
            try {
             Connection cn;
            Statement st;
            String url;



            url = "jdbc:mysql://localhost:3306/db1";
            cn = (Connection) DriverManager.getConnection(url, "root","CADORNA");
            st = (Statement) cn.createStatement();
             st.executeUpdate("UPDATE reg_tbl SET  fname= '"+textName.getText()+
                     "',lname= '"+textLast.getText()+
                     "', address= '"+textAddress.getText()+
                     "',mobileno= '"+textMobileNo.getText()+
                     "',email = '"+textEmail.getText()+
                      "',password = '"+textPass.getText()+
                     "'Where id = '"+searchId.getText()+"' ");

                String query;
                query = "Delete From reg_tbl Where Id='" + searchId.getText() + "'";
                st.executeUpdate(query);
                JOptionPane.showMessageDialog(null, "Record Deleted","System Message",JOptionPane.INFORMATION_MESSAGE);
                 textName.setText("");
            textLast.setText("");
            textAddress.setText("");
            textMobileNo.setText("");
            textEmail.setText("");
            textPass.setText("");
           
            
            } catch (SQLException ex) {
            }
        }

    }//GEN-LAST:event_deleteButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Update.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Update.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Update.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Update.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Update().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton SearchButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton editButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField searchId;
    private javax.swing.JTextField textAddress;
    private javax.swing.JTextField textEmail;
    private javax.swing.JTextField textLast;
    private javax.swing.JTextField textMobileNo;
    private javax.swing.JTextField textName;
    private javax.swing.JTextField textPass;
    // End of variables declaration//GEN-END:variables
}
